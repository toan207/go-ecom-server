// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: go_db_users.sql

package database

import (
	"context"
)

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT usr_email, usr_id FROM ` + "`" + `go_db_users` + "`" + ` WHERE usr_email = ? LIMIT 1
`

type GetUserByEmailRow struct {
	UsrEmail string
	UsrID    uint32
}

func (q *Queries) GetUserByEmail(ctx context.Context, usrEmail string) (GetUserByEmailRow, error) {
	row := q.db.QueryRowContext(ctx, getUserByEmail, usrEmail)
	var i GetUserByEmailRow
	err := row.Scan(&i.UsrEmail, &i.UsrID)
	return i, err
}

const updateUserStatusByUserId = `-- name: UpdateUserStatusByUserId :exec
UPDATE ` + "`" + `go_db_users` + "`" + `
SET usr_status = $2,
    usr_updated_at = $3
WHERE usr_id = $1
`

func (q *Queries) UpdateUserStatusByUserId(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, updateUserStatusByUserId)
	return err
}
